(define (domain ffmpeg)
        (:requirements :equality)
        (:constants Libopus Aac Libx264 Libx265)
        (:predicates
            (file ?f)
            (input-file ?f)
            (output-file ?f)
            (name ?n)
            (stream ?s)
            (video-stream ?s)
            (audio-stream ?s)
            (codec ?c)
            (video-codec ?c)
            (audio-codec ?c)

            (have ?a ?b)
            (encode ?c ?s)

            (opened ?f)
            (written ?f)
            (taken ?n))

        (:action OPEN_FILE
            :parameters (?if ?in)
            :precondition (and (input-file ?if)
                               (name ?in)
                               (have ?if ?in))
            :effect (opened ?if))
        (:action MAP_AUDIO_STREAM
            :parameters (?if ?is ?of ?os)
            :precondition (and (opened ?if)
                               (audio-stream ?is)
                               (have ?if ?is)
                               (not (or (= ?of ?os)
                                        (file ?of) (name ?of) (stream ?of) (codec ?of)
                                        (file ?os) (name ?os) (stream ?os) (codec ?os))))
            :effect (and (audio-stream ?os)
                         (stream ?os)
                         (have ?of ?os)))
        (:action MAP_VIDEO_STREAM
            :parameters (?if ?is ?of ?os)
            :precondition (and (opened ?if)
                               (video-stream ?is)
                               (have ?if ?is)
                               (not (or (= ?of ?os)
                                        (file ?of) (name ?of) (stream ?of) (codec ?of)
                                        (file ?os) (name ?os) (stream ?os) (codec ?os))))
            :effect (and (video-stream ?os)
                         (stream ?os)
                         (have ?of ?os)))
        (:action SET_AUDIO_ENCODER
            :parameters (?os ?oc)
            :precondition (and (audio-codec ?oc)
                               (audio-stream ?os))
            :effect (encode ?oc ?os))
        (:action SET_VIDEO_ENCODER
            :parameters (?os ?oc)
            :precondition (and (video-codec ?oc)
                               (video-stream ?os))
            :effect (encode ?oc ?os))
        (:action WRITE_FILE
            :parameters (?of ?on)
            :precondition (not (or (= ?of ?on)
                                   (file ?of) (name ?of) (stream ?of) (codec ?of)
                                   (file ?on) (name ?on) (stream ?on) (codec ?on)))
            :effect (and (output-file ?of)
                         (file ?of)
                         (name ?on)
                         (have ?of ?on))))
